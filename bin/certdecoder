#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'certdecoder.rb'

class App
  include Methadone::Main
  include Methadone::CLILogging

  main do # Add args you want: |like,so|
    # your program code here
    # You can access CLI options via
    # the options Hash
    if options["input"]
      @cp = CertificateParser.new_from_file(File.expand_path(options["input"]))
    elsif options["hostname"]
      @cp = CertificateParser.new_from_hostname(options["hostname"])
    else
      error "You must include a cert file with -i or a hostname with -h."
    end

    if @cp.certs.count == 0
      error "!! Couldn't find any valid certificates. Make sure your input contains -----BEGIN CERTIFICATE----- and -----END CERTIFICATE----- blocks."
    elsif @cp.certs.count == 1
      info "Found 1 certificate."
    else
      info "Found #{@cp.certs.count} certificates."
    end

    unless options[:silent]
      info @cp.decoded.join("\n\n")
    end
  end

  # supplemental methods here

  # Declare command-line interface here

  # description "one line description of your app"
  #
  # Accept flags via:
  # on("--flag VAL","Some flag")
  on("--input FILE", "-i FILE", "Input .crt/.pem file")
  on("--hostname HOSTNAME", "-h HOSTNAME", "Hostname from which to fetch certificate")
  on("--crt", "Write separate .crt files to the current directory")
  on("--txt", "Write separate decoded certificates to .txt files in the current directory")

  # options[flag] will contain VAL
  #
  # Specify switches via:
  # on("--[no-]switch","Some switch")
  on("--silent", "-s", "Mute output")
  #
  # Or, just call OptionParser methods on opts
  #
  # Require an argument
  # arg :some_arg 
  #
  # # Make an argument optional
  # arg :optional_arg, :optional

  version Certdecoder::VERSION

  use_log_level_option

  go!
end
